@each $header-name in $type-header-styles {
  $header-tag: nth($header-name, 1);
  $header-color: map-deep-get($type-header-styles, $header-tag, color);
  $header-font-style: map-deep-get($type-header-styles, $header-tag, font-style);
  $header-font-weight: map-deep-get($type-header-styles, $header-tag, font-weight);

  #{$header-tag}, .#{$scope}#{$header-tag} {
    color: $header-color;
    font-style: $header-font-style;
    font-weight: $header-font-weight;
    line-height: $type-header-line-height;
  }
}

@each $header-break in $type-header-sizes {
  $breakpoint: nth($header-break, 1);

  @if $breakpoint == nth(nth($breakpoints, 1), 1) {

    @include header-sizes($breakpoint);

  } @else {

    @include breakpoint-up($breakpoint) {
      @include header-sizes($breakpoint);
    }

  }
}

p, .#{$scope}paragraph {
  font-size: $type-p-font-size;
  font-style: $type-p-font-style;
  font-weight: $type-p-font-weight;
  line-height: $type-p-line-height;
  margin-bottom: $type-p-margin-bottom;
  color: $type-p-color;
}

pre, code, kbd, samp, tt,
.#{$scope}pre, .#{$scope}code, .#{$scope}kbd, .#{$scope}samp, .#{$scope}tt  {
  font-family: $type-code-font;
  font-size: $type-code-font-size;
  background: $type-code-background;
  border: $type-code-border;
  border-radius: $type-code-radius;
  padding: $type-code-padding;
  color: $type-code-color;
}
pre, .#{$scope}pre {
  padding: $type-pre-padding;
}

strong, .#{$scope}strong {
  font-size: inherit;
  font-style: $type-strong-font-style;
  font-weight: $type-strong-font-weight;
}

em, .#{$scope}em {
  font-size: inherit;
  font-style: $type-em-font-style;
  font-weight: $type-em-font-weight;
}

mark, .#{$scope}mark {
  font-size: inherit;
  padding: $type-mark-padding;
  background: $type-mark-background;
  color: $type-mark-color;
}

small, .#{$scope}small {
  font-weight: $type-small-font-weight;
  font-size: $type-small-font-size;
}

@import 'utilities';
