// Selector variables

$container: map-get($class-names, container);
$row: map-get($class-names, row);
$column: map-get($class-names, column);

// Container

.#{$container}::before,
.#{$container}::after,
.#{$container} .#{$row}::before,
.#{$container} .#{$row}::after,
.#{$row} .#{$column}::before, .#{$row} .#{$column}::after,
.#{$row} .#{$column}s::before, .#{$row} .#{$column}s::after {
  display: block;
  padding: 0; margin: 0;
  height: 0; width: 0;
}

.#{$container} {
  box-sizing: border-box;
  display: flex;
  margin: 0 auto;
  position: relative;
  max-width: $container-default-width;
  padding-left: $container-space;
  padding-right: $container-space;
}

// Row

.#{$row} {
  display: flex;
  flex-flow: row wrap;
  position: relative;
  flex: 1 0 auto;
  width: 100%;
}

// Column(s)

.#{$column}s, .#{$column} {
  box-sizing: border-box;
  flex: 1 0 100%;
  min-height: 1px;
  min-width: 0;
  word-wrap: break-word;
  max-width: 100%;
  padding-left: $column-gutter-space;
  padding-right: $column-gutter-space;
  padding-bottom: $column-bottom-padding-space;

  @if $column-order-classes == true {
    order: 999;
  }
}

//
// Grid, offset, and order classes generator
//

@import 'helpers';

@each $name in $breakpoints {
  $break: nth($name, 1); // take only the name of the breakpoint, NOT its value.

  @include breakpoint-up($break) {
    @for $i from 1 through $columns {

      .#{$break}-#{$i} {
        flex: 0 0 percentage($i / $columns);
        max-width: percentage($i / $columns);
      }

      @if $column-offset-classes == true {
        .#{$break}-offset-#{$i} {
          margin-left: percentage($i / $columns);
        }
      }

      @if $column-order-classes == true {
        .#{$break}-order-#{$i} { order: $i; }
      }

    } // end @for
  } // end @include
} // end @each

@import 'utilities';
